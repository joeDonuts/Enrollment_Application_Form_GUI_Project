/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.Enrollment_Application_Form_GUI_Project;

import java.awt.Color;
import java.awt.Font;
import java.sql.Connection;
import java.util.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author joeze
 */
public class Application_Form extends javax.swing.JFrame {

    /**
     * Creates new form Application_Form
     */
    public Application_Form() {
        initComponents();
        Connect();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField3 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jTextField15 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        lastnameTF = new javax.swing.JTextField();
        firstnameTF = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        middlenameTF = new javax.swing.JTextField();
        suffixTF = new javax.swing.JTextField();
        nationalityTF = new javax.swing.JTextField();
        academicCB = new javax.swing.JComboBox<>();
        emailaddTF = new javax.swing.JTextField();
        addressTF = new javax.swing.JTextField();
        contactnoTF = new javax.swing.JTextField();
        stateTF = new javax.swing.JTextField();
        cityTF = new javax.swing.JTextField();
        countryTF = new javax.swing.JTextField();
        districtTF = new javax.swing.JTextField();
        postalcodeTF = new javax.swing.JTextField();
        schoolTF = new javax.swing.JTextField();
        genderCB = new javax.swing.JComboBox<>();
        ageTF = new javax.swing.JTextField();
        birthdateTF = new javax.swing.JTextField();
        dategradTF = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        campusCB = new javax.swing.JComboBox<>();
        deptCB = new javax.swing.JComboBox<>();
        courseCB = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        clearButton = new javax.swing.JButton();
        registerButton = new javax.swing.JButton();

        jTextField3.setText("jTextField1");

        jTextField6.setBackground(new java.awt.Color(255, 255, 255));
        jTextField6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextField6.setForeground(new java.awt.Color(0, 0, 0));
        jTextField6.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jTextField6.setToolTipText("");
        jTextField6.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Age", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12), new java.awt.Color(51, 51, 51))); // NOI18N
        jTextField6.setCaretColor(new java.awt.Color(0, 0, 0));
        jTextField6.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextField6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField6ActionPerformed(evt);
            }
        });

        jTextField7.setBackground(new java.awt.Color(255, 255, 255));
        jTextField7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextField7.setForeground(new java.awt.Color(0, 0, 0));
        jTextField7.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jTextField7.setToolTipText("");
        jTextField7.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Middle Name", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12), new java.awt.Color(51, 51, 51))); // NOI18N
        jTextField7.setCaretColor(new java.awt.Color(0, 0, 0));
        jTextField7.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextField7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField7ActionPerformed(evt);
            }
        });

        jTextField15.setBackground(new java.awt.Color(255, 255, 255));
        jTextField15.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextField15.setForeground(new java.awt.Color(0, 0, 0));
        jTextField15.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jTextField15.setToolTipText("");
        jTextField15.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "City/Town", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12), new java.awt.Color(51, 51, 51))); // NOI18N
        jTextField15.setCaretColor(new java.awt.Color(0, 0, 0));
        jTextField15.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextField15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField15ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Student Course Enrollment System");
        setAutoRequestFocus(false);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED), "STUDENT DETAILS", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 18), new java.awt.Color(51, 51, 51))); // NOI18N
        jPanel2.setForeground(new java.awt.Color(204, 204, 204));
        jPanel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        lastnameTF.setBackground(new java.awt.Color(255, 255, 255));
        lastnameTF.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lastnameTF.setForeground(new java.awt.Color(0, 0, 0));
        lastnameTF.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        lastnameTF.setToolTipText("");
        lastnameTF.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Last Name", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12), new java.awt.Color(51, 51, 51))); // NOI18N
        lastnameTF.setCaretColor(new java.awt.Color(0, 0, 0));
        lastnameTF.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        lastnameTF.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                lastnameTFAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        lastnameTF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                lastnameTFFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                lastnameTFFocusLost(evt);
            }
        });
        lastnameTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lastnameTFActionPerformed(evt);
            }
        });

        firstnameTF.setBackground(new java.awt.Color(255, 255, 255));
        firstnameTF.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        firstnameTF.setForeground(new java.awt.Color(0, 0, 0));
        firstnameTF.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        firstnameTF.setToolTipText("");
        firstnameTF.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "First Name", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12), new java.awt.Color(51, 51, 51))); // NOI18N
        firstnameTF.setCaretColor(new java.awt.Color(0, 0, 0));
        firstnameTF.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        firstnameTF.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                firstnameTFAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        firstnameTF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                firstnameTFFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                firstnameTFFocusLost(evt);
            }
        });
        firstnameTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstnameTFActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 153, 153));
        jLabel1.setText("Leave Blank if Not Applicable");

        middlenameTF.setBackground(new java.awt.Color(255, 255, 255));
        middlenameTF.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        middlenameTF.setForeground(new java.awt.Color(0, 0, 0));
        middlenameTF.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        middlenameTF.setToolTipText("");
        middlenameTF.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Middle Name", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12), new java.awt.Color(51, 51, 51))); // NOI18N
        middlenameTF.setCaretColor(new java.awt.Color(0, 0, 0));
        middlenameTF.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        middlenameTF.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                middlenameTFAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        middlenameTF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                middlenameTFFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                middlenameTFFocusLost(evt);
            }
        });
        middlenameTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                middlenameTFActionPerformed(evt);
            }
        });

        suffixTF.setBackground(new java.awt.Color(255, 255, 255));
        suffixTF.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        suffixTF.setForeground(new java.awt.Color(0, 0, 0));
        suffixTF.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        suffixTF.setToolTipText("");
        suffixTF.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Suffix", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12), new java.awt.Color(51, 51, 51))); // NOI18N
        suffixTF.setCaretColor(new java.awt.Color(0, 0, 0));
        suffixTF.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        suffixTF.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                suffixTFAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        suffixTF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                suffixTFFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                suffixTFFocusLost(evt);
            }
        });
        suffixTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                suffixTFActionPerformed(evt);
            }
        });

        nationalityTF.setBackground(new java.awt.Color(255, 255, 255));
        nationalityTF.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        nationalityTF.setForeground(new java.awt.Color(0, 0, 0));
        nationalityTF.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        nationalityTF.setToolTipText("");
        nationalityTF.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Nationality", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12), new java.awt.Color(51, 51, 51))); // NOI18N
        nationalityTF.setCaretColor(new java.awt.Color(0, 0, 0));
        nationalityTF.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        nationalityTF.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                nationalityTFAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        nationalityTF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                nationalityTFFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                nationalityTFFocusLost(evt);
            }
        });
        nationalityTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nationalityTFActionPerformed(evt);
            }
        });

        academicCB.setBackground(new java.awt.Color(255, 255, 255));
        academicCB.setForeground(new java.awt.Color(0, 0, 0));
        academicCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "STEM", "ABM", "HUMSS", "GAS", " ", " " }));
        academicCB.setSelectedIndex(-1);
        academicCB.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Academic Track", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12), new java.awt.Color(51, 51, 51))); // NOI18N
        academicCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                academicCBActionPerformed(evt);
            }
        });

        emailaddTF.setBackground(new java.awt.Color(255, 255, 255));
        emailaddTF.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        emailaddTF.setForeground(new java.awt.Color(0, 0, 0));
        emailaddTF.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        emailaddTF.setToolTipText("");
        emailaddTF.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Email Address", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12), new java.awt.Color(51, 51, 51))); // NOI18N
        emailaddTF.setCaretColor(new java.awt.Color(0, 0, 0));
        emailaddTF.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        emailaddTF.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                emailaddTFAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        emailaddTF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                emailaddTFFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                emailaddTFFocusLost(evt);
            }
        });
        emailaddTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailaddTFActionPerformed(evt);
            }
        });

        addressTF.setBackground(new java.awt.Color(255, 255, 255));
        addressTF.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        addressTF.setForeground(new java.awt.Color(0, 0, 0));
        addressTF.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        addressTF.setToolTipText("");
        addressTF.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "House/Unit/Floor No, Street, Village/Subd.", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12), new java.awt.Color(51, 51, 51))); // NOI18N
        addressTF.setCaretColor(new java.awt.Color(0, 0, 0));
        addressTF.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        addressTF.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                addressTFAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        addressTF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                addressTFFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                addressTFFocusLost(evt);
            }
        });
        addressTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addressTFActionPerformed(evt);
            }
        });

        contactnoTF.setBackground(new java.awt.Color(255, 255, 255));
        contactnoTF.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        contactnoTF.setForeground(new java.awt.Color(0, 0, 0));
        contactnoTF.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        contactnoTF.setToolTipText("");
        contactnoTF.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Contact Number", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12), new java.awt.Color(51, 51, 51))); // NOI18N
        contactnoTF.setCaretColor(new java.awt.Color(0, 0, 0));
        contactnoTF.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        contactnoTF.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                contactnoTFAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        contactnoTF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                contactnoTFFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                contactnoTFFocusLost(evt);
            }
        });
        contactnoTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contactnoTFActionPerformed(evt);
            }
        });

        stateTF.setBackground(new java.awt.Color(255, 255, 255));
        stateTF.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        stateTF.setForeground(new java.awt.Color(0, 0, 0));
        stateTF.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        stateTF.setToolTipText("");
        stateTF.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "State/Province", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12), new java.awt.Color(51, 51, 51))); // NOI18N
        stateTF.setCaretColor(new java.awt.Color(0, 0, 0));
        stateTF.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        stateTF.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                stateTFAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        stateTF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                stateTFFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                stateTFFocusLost(evt);
            }
        });
        stateTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stateTFActionPerformed(evt);
            }
        });

        cityTF.setBackground(new java.awt.Color(255, 255, 255));
        cityTF.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cityTF.setForeground(new java.awt.Color(0, 0, 0));
        cityTF.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        cityTF.setToolTipText("");
        cityTF.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "City/Town", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12), new java.awt.Color(51, 51, 51))); // NOI18N
        cityTF.setCaretColor(new java.awt.Color(0, 0, 0));
        cityTF.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        cityTF.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                cityTFAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        cityTF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cityTFFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                cityTFFocusLost(evt);
            }
        });
        cityTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cityTFActionPerformed(evt);
            }
        });

        countryTF.setBackground(new java.awt.Color(255, 255, 255));
        countryTF.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        countryTF.setForeground(new java.awt.Color(0, 0, 0));
        countryTF.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        countryTF.setToolTipText("");
        countryTF.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Country", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12), new java.awt.Color(51, 51, 51))); // NOI18N
        countryTF.setCaretColor(new java.awt.Color(0, 0, 0));
        countryTF.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        countryTF.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                countryTFAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        countryTF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                countryTFFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                countryTFFocusLost(evt);
            }
        });
        countryTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                countryTFActionPerformed(evt);
            }
        });

        districtTF.setBackground(new java.awt.Color(255, 255, 255));
        districtTF.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        districtTF.setForeground(new java.awt.Color(0, 0, 0));
        districtTF.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        districtTF.setToolTipText("");
        districtTF.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "District/Barangay", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12), new java.awt.Color(51, 51, 51))); // NOI18N
        districtTF.setCaretColor(new java.awt.Color(0, 0, 0));
        districtTF.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        districtTF.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                districtTFAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        districtTF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                districtTFFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                districtTFFocusLost(evt);
            }
        });
        districtTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                districtTFActionPerformed(evt);
            }
        });

        postalcodeTF.setBackground(new java.awt.Color(255, 255, 255));
        postalcodeTF.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        postalcodeTF.setForeground(new java.awt.Color(0, 0, 0));
        postalcodeTF.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        postalcodeTF.setToolTipText("");
        postalcodeTF.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "ZIP Code", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12), new java.awt.Color(51, 51, 51))); // NOI18N
        postalcodeTF.setCaretColor(new java.awt.Color(0, 0, 0));
        postalcodeTF.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        postalcodeTF.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                postalcodeTFAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        postalcodeTF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                postalcodeTFFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                postalcodeTFFocusLost(evt);
            }
        });
        postalcodeTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                postalcodeTFActionPerformed(evt);
            }
        });

        schoolTF.setBackground(new java.awt.Color(255, 255, 255));
        schoolTF.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        schoolTF.setForeground(new java.awt.Color(0, 0, 0));
        schoolTF.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        schoolTF.setToolTipText("");
        schoolTF.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Previous School Attended", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12), new java.awt.Color(51, 51, 51))); // NOI18N
        schoolTF.setCaretColor(new java.awt.Color(0, 0, 0));
        schoolTF.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        schoolTF.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                schoolTFAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        schoolTF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                schoolTFFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                schoolTFFocusLost(evt);
            }
        });
        schoolTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                schoolTFActionPerformed(evt);
            }
        });

        genderCB.setBackground(new java.awt.Color(255, 255, 255));
        genderCB.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        genderCB.setForeground(new java.awt.Color(0, 0, 0));
        genderCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female", "Non-binary", "Transgender", "Intersex", "Prefer not to say", " " }));
        genderCB.setSelectedIndex(-1);
        genderCB.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Gender", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12), new java.awt.Color(51, 51, 51))); // NOI18N

        ageTF.setBackground(new java.awt.Color(255, 255, 255));
        ageTF.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        ageTF.setForeground(new java.awt.Color(0, 0, 0));
        ageTF.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        ageTF.setToolTipText("");
        ageTF.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Age", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12), new java.awt.Color(51, 51, 51))); // NOI18N
        ageTF.setCaretColor(new java.awt.Color(0, 0, 0));
        ageTF.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        ageTF.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                ageTFAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        ageTF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ageTFFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                ageTFFocusLost(evt);
            }
        });
        ageTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ageTFActionPerformed(evt);
            }
        });

        birthdateTF.setBackground(new java.awt.Color(255, 255, 255));
        birthdateTF.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        birthdateTF.setForeground(new java.awt.Color(0, 0, 0));
        birthdateTF.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        birthdateTF.setToolTipText("");
        birthdateTF.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Birth Date", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12), new java.awt.Color(51, 51, 51))); // NOI18N
        birthdateTF.setCaretColor(new java.awt.Color(0, 0, 0));
        birthdateTF.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        birthdateTF.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                birthdateTFAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        birthdateTF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                birthdateTFFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                birthdateTFFocusLost(evt);
            }
        });
        birthdateTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                birthdateTFActionPerformed(evt);
            }
        });

        dategradTF.setBackground(new java.awt.Color(255, 255, 255));
        dategradTF.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        dategradTF.setForeground(new java.awt.Color(0, 0, 0));
        dategradTF.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        dategradTF.setToolTipText("");
        dategradTF.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Date Graduated", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12), new java.awt.Color(51, 51, 51))); // NOI18N
        dategradTF.setCaretColor(new java.awt.Color(0, 0, 0));
        dategradTF.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        dategradTF.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                dategradTFAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        dategradTF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                dategradTFFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                dategradTFFocusLost(evt);
            }
        });
        dategradTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dategradTFActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(academicCB, 0, 168, Short.MAX_VALUE)
                    .addComponent(cityTF))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(stateTF)
                    .addComponent(schoolTF))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(dategradTF, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE)
                    .addComponent(countryTF)))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                    .addComponent(suffixTF, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(0, 87, Short.MAX_VALUE))
                                .addComponent(nationalityTF, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(emailaddTF))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addGap(4, 4, 4)
                                    .addComponent(birthdateTF, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(ageTF, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lastnameTF, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(firstnameTF, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(middlenameTF)
                        .addComponent(contactnoTF)
                        .addComponent(genderCB, 0, 174, Short.MAX_VALUE)))
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addComponent(addressTF, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(districtTF, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(postalcodeTF, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lastnameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(firstnameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(middlenameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(suffixTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(genderCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ageTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(birthdateTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nationalityTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(emailaddTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(contactnoTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addressTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(districtTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(postalcodeTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cityTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stateTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(countryTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(schoolTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(academicCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dategradTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "COURSE DETAILS", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 18), new java.awt.Color(51, 51, 51))); // NOI18N
        jPanel3.setForeground(new java.awt.Color(51, 51, 51));

        campusCB.setBackground(new java.awt.Color(255, 255, 255));
        campusCB.setForeground(new java.awt.Color(0, 0, 0));
        campusCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pablo Borbon", "Alangilan", " ", " " }));
        campusCB.setSelectedIndex(-1);
        campusCB.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Campus", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12), new java.awt.Color(51, 51, 51))); // NOI18N

        deptCB.setBackground(new java.awt.Color(255, 255, 255));
        deptCB.setForeground(new java.awt.Color(0, 0, 0));
        deptCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "College of Engineering (COE)", "College of Architecture, Fine Arts, and Design (CAFAD)", " ", " " }));
        deptCB.setSelectedIndex(-1);
        deptCB.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Department", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12), new java.awt.Color(51, 51, 51))); // NOI18N
        deptCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deptCBActionPerformed(evt);
            }
        });

        courseCB.setBackground(new java.awt.Color(255, 255, 255));
        courseCB.setForeground(new java.awt.Color(0, 0, 0));
        courseCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        courseCB.setSelectedIndex(-1);
        courseCB.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Course", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12), new java.awt.Color(51, 51, 51))); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(campusCB, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deptCB, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(courseCB, 0, 1, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campusCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deptCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(courseCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 51, 51));
        jLabel2.setText("APPLICATION FORM");

        clearButton.setBackground(new java.awt.Color(255, 51, 51));
        clearButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        clearButton.setForeground(new java.awt.Color(51, 51, 51));
        clearButton.setText("CLEAR");
        clearButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        registerButton.setBackground(new java.awt.Color(51, 255, 51));
        registerButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        registerButton.setForeground(new java.awt.Color(51, 51, 51));
        registerButton.setText("REGISTER");
        registerButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        registerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(170, 170, 170)
                        .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(registerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(jLabel2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(registerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    Connection con;
    PreparedStatement pst;
    
    public void Connect(){
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://127.0.0.1/mysql","root","MySQLPass1234");
            System.out.println("Connected");
        }catch(ClassNotFoundException | SQLException ex){
            Logger.getLogger(Application_Form.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void jTextField6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField6ActionPerformed

    private void jTextField7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField7ActionPerformed

    private void jTextField15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField15ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField15ActionPerformed

    private void schoolTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_schoolTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_schoolTFActionPerformed

    private void postalcodeTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_postalcodeTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_postalcodeTFActionPerformed

    private void districtTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_districtTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_districtTFActionPerformed

    private void countryTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_countryTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_countryTFActionPerformed

    private void cityTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cityTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cityTFActionPerformed

    private void stateTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stateTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stateTFActionPerformed

    private void contactnoTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contactnoTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_contactnoTFActionPerformed

    private void addressTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addressTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addressTFActionPerformed

    private void emailaddTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailaddTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailaddTFActionPerformed

    private void nationalityTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nationalityTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nationalityTFActionPerformed

    private void suffixTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_suffixTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_suffixTFActionPerformed

    private void middlenameTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_middlenameTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_middlenameTFActionPerformed

    private void firstnameTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstnameTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_firstnameTFActionPerformed

    private void lastnameTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lastnameTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lastnameTFActionPerformed

    private void lastnameTFFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_lastnameTFFocusLost
        if (lastnameTF.getText().isEmpty()) {
           lastnameTF.setForeground(Color.GRAY);
           lastnameTF.setFont(new Font("Tahoma", Font.ITALIC, 12));
           lastnameTF.setText("Ex. Dela Cruz");
        }
    }//GEN-LAST:event_lastnameTFFocusLost

    private void lastnameTFFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_lastnameTFFocusGained
        if (lastnameTF.getText().equals("Ex. Dela Cruz")) {
            lastnameTF.setText("");
            lastnameTF.setFont(new Font("Tahoma", Font.PLAIN, 12));
            lastnameTF.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_lastnameTFFocusGained

    private void firstnameTFFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_firstnameTFFocusLost
         if (firstnameTF.getText().isEmpty()) {
           firstnameTF.setForeground(Color.GRAY);
           firstnameTF.setFont(new Font("Tahoma", Font.ITALIC, 12));
           firstnameTF.setText("Ex. Juan");
        }
    }//GEN-LAST:event_firstnameTFFocusLost

    private void firstnameTFFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_firstnameTFFocusGained
        if (firstnameTF.getText().equals("Ex. Juan")) {
            firstnameTF.setText("");
            firstnameTF.setFont(new Font("Tahoma", Font.PLAIN, 12));
            firstnameTF.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_firstnameTFFocusGained

    private void firstnameTFAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_firstnameTFAncestorAdded
        if (firstnameTF.getText().isEmpty()) {
           firstnameTF.setForeground(Color.GRAY);
           firstnameTF.setFont(new Font("Tahoma", Font.ITALIC, 12));
           firstnameTF.setText("Ex. Juan");
        }
    }//GEN-LAST:event_firstnameTFAncestorAdded

    private void lastnameTFAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_lastnameTFAncestorAdded
        if (lastnameTF.getText().isEmpty()) {
           lastnameTF.setForeground(Color.GRAY);
           lastnameTF.setFont(new Font("Tahoma", Font.ITALIC, 12));
           lastnameTF.setText("Ex. Dela Cruz");
        }
    }//GEN-LAST:event_lastnameTFAncestorAdded

    private void middlenameTFFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_middlenameTFFocusGained
        if (middlenameTF.getText().equals("Ex. Martinez")) {
            middlenameTF.setText("");
            middlenameTF.setFont(new Font("Tahoma", Font.PLAIN, 12));
            middlenameTF.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_middlenameTFFocusGained

    private void middlenameTFFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_middlenameTFFocusLost
        if (middlenameTF.getText().isEmpty()) {
           middlenameTF.setForeground(Color.GRAY);
           middlenameTF.setFont(new Font("Tahoma", Font.ITALIC, 12));
           middlenameTF.setText("Ex. Martinez");
        }
    }//GEN-LAST:event_middlenameTFFocusLost

    private void middlenameTFAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_middlenameTFAncestorAdded
       if (middlenameTF.getText().isEmpty()) {
           middlenameTF.setForeground(Color.GRAY);
           middlenameTF.setFont(new Font("Tahoma", Font.ITALIC, 12));
           middlenameTF.setText("Ex. Martinez");
        }
    }//GEN-LAST:event_middlenameTFAncestorAdded

    private void suffixTFFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_suffixTFFocusGained
        if (suffixTF.getText().equals("Ex. Jr,III")) {
            suffixTF.setText("");
            suffixTF.setFont(new Font("Tahoma", Font.PLAIN, 12));
            suffixTF.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_suffixTFFocusGained

    private void suffixTFFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_suffixTFFocusLost
        if (suffixTF.getText().isEmpty()) {
           suffixTF.setForeground(Color.GRAY);
           suffixTF.setFont(new Font("Tahoma", Font.ITALIC, 12));
           suffixTF.setText("Ex. Jr,III");
        }
    }//GEN-LAST:event_suffixTFFocusLost

    private void suffixTFAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_suffixTFAncestorAdded
        if (suffixTF.getText().isEmpty()) {
           suffixTF.setForeground(Color.GRAY);
           suffixTF.setFont(new Font("Tahoma", Font.ITALIC, 12));
           suffixTF.setText("Ex. Jr,III");
        }
    }//GEN-LAST:event_suffixTFAncestorAdded

    private void emailaddTFAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_emailaddTFAncestorAdded
        if (emailaddTF.getText().isEmpty()) {
           emailaddTF.setForeground(Color.GRAY);
           emailaddTF.setFont(new Font("Tahoma", Font.ITALIC, 12));
           emailaddTF.setText("Ex. juandelacruz@email.com");
        }
    }//GEN-LAST:event_emailaddTFAncestorAdded

    private void emailaddTFFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_emailaddTFFocusGained
        if (emailaddTF.getText().equals("Ex. juandelacruz@email.com")) {
            emailaddTF.setText("");
            emailaddTF.setFont(new Font("Tahoma", Font.PLAIN, 12));
            emailaddTF.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_emailaddTFFocusGained

    private void emailaddTFFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_emailaddTFFocusLost
       if (emailaddTF.getText().isEmpty()) {
           emailaddTF.setForeground(Color.GRAY);
           emailaddTF.setFont(new Font("Tahoma", Font.ITALIC, 12));
           emailaddTF.setText("Ex. juandelacruz@email.com");
        }
    }//GEN-LAST:event_emailaddTFFocusLost

    private void contactnoTFAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_contactnoTFAncestorAdded
        if (contactnoTF.getText().isEmpty()) {
           contactnoTF.setForeground(Color.GRAY);
           contactnoTF.setFont(new Font("Tahoma", Font.ITALIC, 12));
           contactnoTF.setText("Ex. 09123456789");
        }
    }//GEN-LAST:event_contactnoTFAncestorAdded

    private void contactnoTFFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_contactnoTFFocusGained
        if (contactnoTF.getText().equals("Ex. 09123456789")) {
            contactnoTF.setText("");
            contactnoTF.setFont(new Font("Tahoma", Font.PLAIN, 12));
            contactnoTF.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_contactnoTFFocusGained

    private void contactnoTFFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_contactnoTFFocusLost
        if (contactnoTF.getText().isEmpty()) {
           contactnoTF.setForeground(Color.GRAY);
           contactnoTF.setFont(new Font("Tahoma", Font.ITALIC, 12));
           contactnoTF.setText("Ex. 09123456789");
        }
    }//GEN-LAST:event_contactnoTFFocusLost

    private void ageTFAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_ageTFAncestorAdded
        if (ageTF.getText().isEmpty()) {
           ageTF.setForeground(Color.GRAY);
           ageTF.setFont(new Font("Tahoma", Font.ITALIC, 12));
           ageTF.setText("Ex. 21");
        }
    }//GEN-LAST:event_ageTFAncestorAdded

    private void ageTFFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ageTFFocusGained
        if (ageTF.getText().equals("Ex. 21")) {
            ageTF.setText("");
            ageTF.setFont(new Font("Tahoma", Font.PLAIN, 12));
            ageTF.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_ageTFFocusGained

    private void ageTFFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ageTFFocusLost
       if (ageTF.getText().isEmpty()) {
           ageTF.setForeground(Color.GRAY);
           ageTF.setFont(new Font("Tahoma", Font.ITALIC, 12));
           ageTF.setText("Ex. 21");
        }
    }//GEN-LAST:event_ageTFFocusLost

    private void ageTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ageTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ageTFActionPerformed

    private void dategradTFAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_dategradTFAncestorAdded
        if (dategradTF.getText().isEmpty()) {
           dategradTF.setForeground(Color.GRAY);
           dategradTF.setFont(new Font("Tahoma", Font.ITALIC, 12));
           dategradTF.setText("dd/MM/yyyy");
        }
    }//GEN-LAST:event_dategradTFAncestorAdded

    private void dategradTFFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dategradTFFocusGained
        if (dategradTF.getText().equals("dd/MM/yyyy")) {
            dategradTF.setFont(new Font("Tahoma", Font.PLAIN, 12));
            dategradTF.setText("");
            dategradTF.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_dategradTFFocusGained

    private void dategradTFFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dategradTFFocusLost
        if (dategradTF.getText().isEmpty()) {
           dategradTF.setForeground(Color.GRAY);
           dategradTF.setFont(new Font("Tahoma", Font.ITALIC, 12));
           dategradTF.setText("dd/MM/yyyy");
        }
    }//GEN-LAST:event_dategradTFFocusLost

    private void dategradTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dategradTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dategradTFActionPerformed

    private void nationalityTFAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_nationalityTFAncestorAdded
        if (nationalityTF.getText().isEmpty()) {
           nationalityTF.setForeground(Color.GRAY);
           nationalityTF.setFont(new Font("Tahoma", Font.ITALIC, 12));
           nationalityTF.setText("Ex. Filipino");
        }
    }//GEN-LAST:event_nationalityTFAncestorAdded

    private void nationalityTFFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nationalityTFFocusGained
        if (nationalityTF.getText().equals("Ex. Filipino")) {
            nationalityTF.setFont(new Font("Tahoma", Font.PLAIN, 12));
            nationalityTF.setText("");
            nationalityTF.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_nationalityTFFocusGained

    private void nationalityTFFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nationalityTFFocusLost
        if (nationalityTF.getText().isEmpty()) {
           nationalityTF.setForeground(Color.GRAY);
           nationalityTF.setFont(new Font("Tahoma", Font.ITALIC, 12));
           nationalityTF.setText("Ex. Filipino");
        }
    }//GEN-LAST:event_nationalityTFFocusLost

    private void addressTFAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_addressTFAncestorAdded
        if (addressTF.getText().isEmpty()) {
           addressTF.setForeground(Color.GRAY);
          addressTF.setFont(new Font("Tahoma", Font.ITALIC, 12));
           addressTF.setText("Ex. Blk 8 L16, Sisa St, Forbes Park");
        }
    }//GEN-LAST:event_addressTFAncestorAdded

    private void addressTFFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_addressTFFocusGained
        if (addressTF.getText().equals("Ex. Blk 8 L16, Sisa St, Forbes Park")) {
            addressTF.setFont(new Font("Tahoma", Font.PLAIN, 12));
            addressTF.setText("");
            addressTF.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_addressTFFocusGained

    private void addressTFFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_addressTFFocusLost
        if (addressTF.getText().isEmpty()) {
           addressTF.setForeground(Color.GRAY);
           addressTF.setFont(new Font("Tahoma", Font.ITALIC, 12));
           addressTF.setText("Ex. Blk 8 L16, Sisa St, Forbes Park");
        }
    }//GEN-LAST:event_addressTFFocusLost

    private void districtTFAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_districtTFAncestorAdded
        if (districtTF.getText().isEmpty()) {
           districtTF.setForeground(Color.GRAY);
           districtTF.setFont(new Font("Tahoma", Font.ITALIC, 12));
           districtTF.setText("Ex. Brgy San Miguel");
        }
    }//GEN-LAST:event_districtTFAncestorAdded

    private void districtTFFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_districtTFFocusGained
        if (districtTF.getText().equals("Ex. Brgy San Miguel")) {
            districtTF.setText("");
            districtTF.setFont(new Font("Tahoma", Font.PLAIN, 12));
            districtTF.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_districtTFFocusGained

    private void districtTFFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_districtTFFocusLost
        if (districtTF.getText().isEmpty()) {
           districtTF.setForeground(Color.GRAY);
           districtTF.setFont(new Font("Tahoma", Font.ITALIC, 12));
           districtTF.setText("Ex. Brgy San Miguel");
        }
    }//GEN-LAST:event_districtTFFocusLost

    private void postalcodeTFAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_postalcodeTFAncestorAdded
        if (postalcodeTF.getText().isEmpty()) {
           postalcodeTF.setForeground(Color.GRAY);
           postalcodeTF.setFont(new Font("Tahoma", Font.ITALIC, 12));
           postalcodeTF.setText("Ex. 1008");
        }
    }//GEN-LAST:event_postalcodeTFAncestorAdded

    private void postalcodeTFFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_postalcodeTFFocusGained
        if (postalcodeTF.getText().equals("Ex. 1008")) {
            postalcodeTF.setFont(new Font("Tahoma", Font.PLAIN, 12));
            postalcodeTF.setText("");
            postalcodeTF.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_postalcodeTFFocusGained

    private void postalcodeTFFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_postalcodeTFFocusLost
        if (postalcodeTF.getText().isEmpty()) {
           postalcodeTF.setForeground(Color.GRAY);
           postalcodeTF.setFont(new Font("Tahoma", Font.ITALIC, 12));
           postalcodeTF.setText("Ex. 1008");
        }
    }//GEN-LAST:event_postalcodeTFFocusLost

    private void cityTFAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_cityTFAncestorAdded
        if (cityTF.getText().isEmpty()) {
           cityTF.setForeground(Color.GRAY);
           cityTF.setFont(new Font("Tahoma", Font.ITALIC, 12));
           cityTF.setText("Ex. Quezon City");
        }
    }//GEN-LAST:event_cityTFAncestorAdded

    private void cityTFFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cityTFFocusGained
        if (cityTF.getText().equals("Ex. Quezon City")) {
            cityTF.setFont(new Font("Tahoma", Font.PLAIN, 12));
            cityTF.setText("");
            cityTF.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_cityTFFocusGained

    private void cityTFFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cityTFFocusLost
        if (cityTF.getText().isEmpty()) {
           cityTF.setForeground(Color.GRAY);
           cityTF.setFont(new Font("Tahoma", Font.ITALIC, 12));
           cityTF.setText("Ex. Quezon City");
        }
    }//GEN-LAST:event_cityTFFocusLost

    private void stateTFAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_stateTFAncestorAdded
        if (stateTF.getText().isEmpty()) {
           stateTF.setForeground(Color.GRAY);
           stateTF.setFont(new Font("Tahoma", Font.ITALIC, 12));
           stateTF.setText("Ex. Manila");
        }
    }//GEN-LAST:event_stateTFAncestorAdded

    private void stateTFFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_stateTFFocusGained
        if (stateTF.getText().equals("Ex. Manila")) {
            stateTF.setFont(new Font("Tahoma", Font.PLAIN, 12));
            stateTF.setText("");
            stateTF.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_stateTFFocusGained

    private void stateTFFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_stateTFFocusLost
        if (stateTF.getText().isEmpty()) {
           stateTF.setForeground(Color.GRAY);
           stateTF.setFont(new Font("Tahoma", Font.ITALIC, 12));
           stateTF.setText("Ex. Manila");
        }
    }//GEN-LAST:event_stateTFFocusLost

    private void countryTFAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_countryTFAncestorAdded
        if (countryTF.getText().isEmpty()) {
           countryTF.setForeground(Color.GRAY);
           countryTF.setFont(new Font("Tahoma", Font.ITALIC, 12));
           countryTF.setText("Ex. Philippines");
        }
    }//GEN-LAST:event_countryTFAncestorAdded

    private void countryTFFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_countryTFFocusGained
        if (countryTF.getText().equals("Ex. Philippines")) {
            countryTF.setFont(new Font("Tahoma", Font.PLAIN, 12));
            countryTF.setText("");
            countryTF.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_countryTFFocusGained

    private void countryTFFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_countryTFFocusLost
        if (countryTF.getText().isEmpty()) {
           countryTF.setForeground(Color.GRAY);
           countryTF.setFont(new Font("Tahoma", Font.ITALIC, 12));
           countryTF.setText("Ex. Philippines");
        }
    }//GEN-LAST:event_countryTFFocusLost

    private void schoolTFAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_schoolTFAncestorAdded
        if (schoolTF.getText().isEmpty()) {
           schoolTF.setForeground(Color.GRAY);
           schoolTF.setFont(new Font("Tahoma", Font.ITALIC, 12));
           schoolTF.setText("Ex. Quezon City High School");
        }
    }//GEN-LAST:event_schoolTFAncestorAdded

    private void schoolTFFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_schoolTFFocusGained
        if (schoolTF.getText().equals("Ex. Quezon City High School")) {
            schoolTF.setFont(new Font("Tahoma", Font.PLAIN, 12));
            schoolTF.setText("");
            schoolTF.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_schoolTFFocusGained

    private void schoolTFFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_schoolTFFocusLost
        if (schoolTF.getText().isEmpty()) {
           schoolTF.setForeground(Color.GRAY);
           schoolTF.setFont(new Font("Tahoma", Font.ITALIC, 12));
           schoolTF.setText("Ex. Quezon City High School");
        }
    }//GEN-LAST:event_schoolTFFocusLost

    private void deptCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deptCBActionPerformed
        Object selectedDept = deptCB.getSelectedItem(); 
    
    if (selectedDept != null) {
        if (selectedDept.equals("College of Engineering (COE)")){
            courseCB.removeAllItems();
            courseCB.setSelectedItem(null);
            courseCB.addItem("BS Mechanical Engineering");
            courseCB.addItem("BS Electrical Engineering");
            courseCB.addItem("BS Electronics Engineering");
            courseCB.addItem("BS Civil Engineering");
            courseCB.addItem("BS Chemical Engineering");
            courseCB.addItem("BS Computer Engineering");
        }
        else if (selectedDept.equals("College of Architecture, Fine Arts, and Design (CAFAD)")){
            courseCB.removeAllItems();
            courseCB.setSelectedItem(null);
            courseCB.addItem("BS Architecture");
            courseCB.addItem("BS Fine Arts");
            courseCB.addItem("BS Interior Design");
        }
    }
    }//GEN-LAST:event_deptCBActionPerformed

    private void registerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerButtonActionPerformed
        String campus = (String)campusCB.getSelectedItem();
        String department = (String)deptCB.getSelectedItem();
        String course = (String)courseCB.getSelectedItem();
        String lastname = lastnameTF.getText();
        String firstname = firstnameTF.getText();
        String middlename = middlenameTF.getText();
        String suffix = suffixTF.getText();
        String birth = birthdateTF.getText();
        String gender = (String)genderCB.getSelectedItem();
        String nation = nationalityTF.getText();
        String email = emailaddTF.getText();
        String contact = contactnoTF.getText();
        String address = addressTF.getText();
        String state = stateTF.getText();
        String country = countryTF.getText();
        String brgy = districtTF.getText();
        String zip = postalcodeTF.getText();
        String acad = (String)academicCB.getSelectedItem();
        String dategrad = dategradTF.getText();
        String school = schoolTF.getText();
        String city = cityTF.getText();
        String ageText = ageTF.getText();
        Date date = new Date();
        if ("Ex. 21".equals(ageText)) {
            JOptionPane.showMessageDialog(this, "Age Text Field required");
            return;
        }
        if ("Ex. 1008".equals(zip)) {
            JOptionPane.showMessageDialog(this, "Zip Code Text Field required");
            return;
        }
        if (campus == null){
            JOptionPane.showMessageDialog(this, "Campus Combo Box required");
            return;
        }
        if (department == null){
            JOptionPane.showMessageDialog(this, "Department Combo Box required");
            return;
        }
        if (course == null){
            JOptionPane.showMessageDialog(this, "Course Combo Box required");
            return;
        }
        if ("Ex. Dela Cruz".equals(lastname)){
            JOptionPane.showMessageDialog(this, "Last Name Text Field required");
            return;
        }
        if ("Ex. Juan".equals(firstname)){
            JOptionPane.showMessageDialog(this, "First Name Text Field required");
            return;
        }
        if ("Ex. Martinez".equals(middlename)){
            JOptionPane.showMessageDialog(this, "Middle Name Text Field required");
            return;
        }
        if (gender == null){
            JOptionPane.showMessageDialog(this, "Gender Combo Box required");
            return;
        }
        if ("Ex. Filipino".equals(nation)){
            JOptionPane.showMessageDialog(this, "Nationality Text Field required");
            return;
        }
        if ("Ex. juandelacruz@email.com".equals(email)){
            JOptionPane.showMessageDialog(this, "Email Address Text Field required");
            return;
        }
        if ("Ex. 09123456789".equals(contact)){
            JOptionPane.showMessageDialog(this, "Contact Number Text Field required");
            return;
        }
        if ("Ex. Blk 8 L16, Sisa St, Forbes Park".equals(address)){
            JOptionPane.showMessageDialog(this, "Address Text Field required");
            return;
        }
        if ("Ex. Brgy San Miguel".equals(brgy)){
            JOptionPane.showMessageDialog(this, "Brgy./District Text Field required");
            return;
        }
        if ("Ex. Quezon City".equals(city)){
            JOptionPane.showMessageDialog(this, "City Text Field required");
            return;
        }
        if ("Ex. Manila".equals(state)){
            JOptionPane.showMessageDialog(this, "State Text Field required");
            return;
        }
        if ("Ex. Philippines".equals(country)){
            JOptionPane.showMessageDialog(this, "Country Text Field required");
            return;
        }
        
        try{
            int age = Integer.parseInt(ageText);
            pst = con.prepareStatement("select Availability, Students from courses_available where (Campus = ? AND Department = ? AND Courses = ? )"); 
            pst.setString(1, campus);
            pst.setString(2, department);
            pst.setString(3, course);
            ResultSet rs = pst.executeQuery();
            if (rs.next()){
                try {
                    String avail = rs.getString("Availability");
                    int students = rs.getInt("Students");
                    if ("Unavailable".equals(avail)){
                        JOptionPane.showMessageDialog(this, "The course is unavailable");
                        return;
                    }
                    if (students >= 40){
                        JOptionPane.showMessageDialog(this, "The course is full");
                        return;
                    }
                    pst = con.prepareStatement("update courses_available set Students = Students + 1 where (Campus = ? AND Department = ? AND Courses = ? ) ");
                    pst.setString(1, campus);
                    pst.setString(2, department);
                    pst.setString(3, course);
                    pst.executeUpdate();
                    
                    String [] fulladd = {address, brgy, city, state, country, zip};
                    
                    pst = con.prepareStatement("insert into enrolled_students(Campus,Department,Course,Name,Age,BirthDate,Gender,Nationality,Address,ContactNumber,EmailAddress,AcademicTrack,PreviousSchoolAttended,DateGraduated,DateEnrolled)values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                    pst.setString(1,campus);
                    pst.setString(2,department);
                    pst.setString(3,course);
                    if ("Ex. Jr,III".equals(suffix)){
                        String [] fullname = {lastname + ",", firstname, middlename};
                        StringBuffer strbuffer = new StringBuffer();
                        for (String str : fullname) {
                            strbuffer.append(str).append(" ");
                        }
                    String result = strbuffer.toString();
                    pst.setString(4,result);
                    }else{
                        String [] fullname = {lastname + ",", firstname, suffix, middlename};
                        StringBuffer strbuffer1 = new StringBuffer();
                        for (String str : fullname) {
                            strbuffer1.append(str).append(" ");
                        }
                    String result1 = strbuffer1.toString();
                    pst.setString(4,result1);
                    }
                    pst.setInt(5, age); 
                    pst.setString(6, birth);
                    pst.setString(7,gender);
                    pst.setString(8,nation);
                    pst.setString(9,Arrays.toString(fulladd));
                    pst.setString(10,contact);
                    pst.setString(11,email);
                    pst.setString(12,acad);
                    pst.setString(13,school);
                    pst.setString(14,dategrad);
                    
                    java.sql.Date sqldate = new java.sql.Date(date.getTime());
                    pst.setDate(15,sqldate);
                    pst.executeUpdate();
              
                    
                    
                } catch (SQLException ex) {
                    Logger.getLogger(Application_Form.class.getName()).log(Level.SEVERE, null, ex);
                }catch (NumberFormatException nfe) {
                    JOptionPane.showMessageDialog(this, "Invalid Age Format");
                    Logger.getLogger(Application_Form.class.getName()).log(Level.SEVERE, null, nfe);
                    return;
                }
                Enrollment_details ed = new Enrollment_details();
                ed.show();
                
            }
        }catch (SQLException ex) {
            Logger.getLogger(Application_Form.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_registerButtonActionPerformed

    private void birthdateTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_birthdateTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_birthdateTFActionPerformed

    private void birthdateTFFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_birthdateTFFocusLost
        if (birthdateTF.getText().isEmpty()) {
            birthdateTF.setForeground(Color.GRAY);
            birthdateTF.setFont(new Font("Tahoma", Font.ITALIC, 12));
            birthdateTF.setText("dd/MM/yyyy");
        }
    }//GEN-LAST:event_birthdateTFFocusLost

    private void birthdateTFFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_birthdateTFFocusGained
        if (birthdateTF.getText().equals("dd/MM/yyyy")) {
            birthdateTF.setFont(new Font("Tahoma", Font.PLAIN, 12));
            birthdateTF.setText("");
            birthdateTF.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_birthdateTFFocusGained

    private void birthdateTFAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_birthdateTFAncestorAdded
        if (birthdateTF.getText().isEmpty()) {
            birthdateTF.setForeground(Color.GRAY);
            birthdateTF.setFont(new Font("Tahoma", Font.ITALIC, 12));
            birthdateTF.setText("dd/MM/yyyy");
        }
    }//GEN-LAST:event_birthdateTFAncestorAdded

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        if (academicCB.getSelectedItem() != null) {
        academicCB.setSelectedIndex(-1);
            }
        this.addressTF.setForeground(Color.GRAY);
        this.addressTF.setFont(new Font("Tahoma", Font.ITALIC, 12));
        this.addressTF.setText("Ex. Blk 8 L16, Sisa St, Forbes Park");
        this.ageTF.setForeground(Color.GRAY);
        this.ageTF.setFont(new Font("Tahoma", Font.ITALIC, 12));
        this.ageTF.setText("Ex. 21");
        this.birthdateTF.setForeground(Color.GRAY);
        this.birthdateTF.setFont(new Font("Tahoma", Font.ITALIC, 12));
        this.birthdateTF.setText("dd/MM/yyyy");
        if (campusCB.getSelectedItem() != null) {
        campusCB.setSelectedItem(null);
            }
        this.cityTF.setForeground(Color.GRAY);
        this.cityTF.setFont(new Font("Tahoma", Font.ITALIC, 12));
        this.cityTF.setText("Ex. Quezon City");
        this.contactnoTF.setForeground(Color.GRAY);
        this.contactnoTF.setFont(new Font("Tahoma", Font.ITALIC, 12));
        this.contactnoTF.setText("Ex. 09123456789");
        this.countryTF.setForeground(Color.GRAY);
        this.countryTF.setFont(new Font("Tahoma", Font.ITALIC, 12));
        this.countryTF.setText("Ex. Philippines");
        if (courseCB.getSelectedItem() != null) {
        courseCB.setSelectedItem(null);
            }
        this.dategradTF.setForeground(Color.GRAY);
        this.dategradTF.setFont(new Font("Tahoma", Font.ITALIC, 12));
        this.dategradTF.setText("dd/MM/yyyy");
        if (deptCB.getSelectedItem() != null) {
        deptCB.setSelectedItem(null);
            }
        this.districtTF.setForeground(Color.GRAY);
        this.districtTF.setFont(new Font("Tahoma", Font.ITALIC, 12));
        this.districtTF.setText("Ex. Brgy San Miguel");
        this.emailaddTF.setForeground(Color.GRAY);
        this.emailaddTF.setFont(new Font("Tahoma", Font.ITALIC, 12));
        this.emailaddTF.setText("Ex. juandelacruz@email.com");
        this.firstnameTF.setForeground(Color.GRAY);
        this.firstnameTF.setFont(new Font("Tahoma", Font.ITALIC, 12));
        this.firstnameTF.setText("Ex. Juan");
        if (genderCB.getSelectedItem() != null) {
        genderCB.setSelectedItem(null);
            }
        this.lastnameTF.setForeground(Color.GRAY);
        this.lastnameTF.setFont(new Font("Tahoma", Font.ITALIC, 12));
        this.lastnameTF.setText("Ex. Dela Cruz");
        this.middlenameTF.setForeground(Color.GRAY);
        this.middlenameTF.setFont(new Font("Tahoma", Font.ITALIC, 12));
        this.middlenameTF.setText("Ex. Martinez");
        this.nationalityTF.setForeground(Color.GRAY);
        this.nationalityTF.setFont(new Font("Tahoma", Font.ITALIC, 12));
        this.nationalityTF.setText("Ex. Filipino");
        this.postalcodeTF.setForeground(Color.GRAY);
        this.postalcodeTF.setFont(new Font("Tahoma", Font.ITALIC, 12));
        this.postalcodeTF.setText("Ex. 1008");
        this.schoolTF.setForeground(Color.GRAY);
        this.schoolTF.setFont(new Font("Tahoma", Font.ITALIC, 12));
        this.schoolTF.setText("Ex. Quezon City High School");
        this.stateTF.setForeground(Color.GRAY);
        this.stateTF.setFont(new Font("Tahoma", Font.ITALIC, 12));
        this.stateTF.setText("Ex. Manila");
        this.suffixTF.setForeground(Color.GRAY);
        this.suffixTF.setFont(new Font("Tahoma", Font.ITALIC, 12));
        this.suffixTF.setText("Ex. Jr,III");
    }//GEN-LAST:event_clearButtonActionPerformed

    private void academicCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_academicCBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_academicCBActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Application_Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Application_Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Application_Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Application_Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Application_Form().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> academicCB;
    private javax.swing.JTextField addressTF;
    private javax.swing.JTextField ageTF;
    private javax.swing.JTextField birthdateTF;
    private javax.swing.JComboBox<String> campusCB;
    private javax.swing.JTextField cityTF;
    private javax.swing.JButton clearButton;
    private javax.swing.JTextField contactnoTF;
    private javax.swing.JTextField countryTF;
    private javax.swing.JComboBox<String> courseCB;
    private javax.swing.JTextField dategradTF;
    private javax.swing.JComboBox<String> deptCB;
    private javax.swing.JTextField districtTF;
    private javax.swing.JTextField emailaddTF;
    private javax.swing.JTextField firstnameTF;
    private javax.swing.JComboBox<String> genderCB;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTextField jTextField15;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField lastnameTF;
    private javax.swing.JTextField middlenameTF;
    private javax.swing.JTextField nationalityTF;
    private javax.swing.JTextField postalcodeTF;
    private javax.swing.JButton registerButton;
    private javax.swing.JTextField schoolTF;
    private javax.swing.JTextField stateTF;
    private javax.swing.JTextField suffixTF;
    // End of variables declaration//GEN-END:variables
}
